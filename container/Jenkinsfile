pipeline {
  agent {
    docker { image 'node:latest' }
  }
  stages {
    stage('Install') {
      steps { sh '''
          npm install
        '''
         }
    }

    stage('Build') {
      steps { sh 'npm run build --prod' }
    }

    stage('Deploy') {
        def containerName = "cats-container"
        // Any change in Volume will automatically result in Hot Reload of Nginx
        def rc = sh (script: "docker inspect -f '{{.State.Running}}' ${containerName}", returnStatus: true)
        if(rc == 0) {
        echo "Container ${containerName} exists..."
        try {
            echo "Removing old container and creating a new one..."
            sh "docker rm -f ${containerName}"
            sh "docker run -d -p 80:80 -v d:/.temp/apps/container:/usr/share/nginx/html/ --name ${containerName} nginx"

        }
        catch(err) { // timeout reached or input false
            echo "Doing Nothing!"
        }
        }
        else
        {
        echo "Container ${containerName} does not exist... Creating..."
        sh "docker run -d -p 80:80 -v d:/.temp/apps/container:/usr/share/nginx/html/ --name ${containerName} nginx"
        }
    }
  }
}