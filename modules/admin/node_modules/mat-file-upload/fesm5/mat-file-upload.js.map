{"version":3,"file":"mat-file-upload.js","sources":["ng://mat-file-upload/lib/mat-file-upload.service.ts","ng://mat-file-upload/lib/mat-file-upload.component.ts","ng://mat-file-upload/lib/mat-file-upload.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MatFileUploadService {\r\n\r\n  constructor() { }\r\n}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewChild,\r\n} from '@angular/core'\r\n\r\n@Component({\r\n  selector: 'mat-file-upload',\r\n  template: `\r\n    <span class=\"file-input-text\">{{ labelText }}</span>\r\n    <button\r\n      mat-button\r\n      [type]=\"selectFilesButtonType\"\r\n      color=\"primary\"\r\n      class=\"file-input-button\"\r\n      (click)=\"fileInput.click()\"\r\n      [attr.aria-label]=\"selectButtonText\"\r\n    >\r\n      <span>{{ selectButtonText }}</span>\r\n      <input\r\n        #fileInput\r\n        type=\"file\"\r\n        style=\"display: none\"\r\n        [accept]=\"acceptedTypes\"\r\n        [multiple]=\"allowMultipleFiles\"\r\n        (change)=\"filesChanged($event.target.files)\"\r\n      />\r\n    </button>\r\n    <button\r\n      mat-raised-button\r\n      [type]=\"uploadButtonType\"\r\n      color=\"primary\"\r\n      class=\"file-input-button\"\r\n      [disabled]=\"!selectedFiles\"\r\n      (click)=\"uploadFiles()\"\r\n      *ngIf=\"showUploadButton\"\r\n      [attr.aria-label]=\"uploadButtonText\"\r\n    >\r\n      {{ uploadButtonText }}\r\n    </button>\r\n    <span class=\"file-input-text\">{{ selectedFileText }}</span>\r\n    <button\r\n      mat-icon-button\r\n      (click)=\"filesChanged(null)\"\r\n      type=\"button\"\r\n      aria-label=\"Remove Selected File(s)\"\r\n    >\r\n      <ng-container *ngIf=\"selectedFiles != null && selectedFiles.length > 0\">\r\n        <mat-icon *ngIf=\"!customSvgIcon\">close</mat-icon>\r\n        <mat-icon *ngIf=\"customSvgIcon\" [svgIcon]=\"customSvgIcon\"></mat-icon>\r\n      </ng-container>\r\n    </button>\r\n  `,\r\n  styles: [\r\n    '.file-input-button { margin-right: 8px !important }',\r\n    '.file-input-text { font-size: 14px !important; margin-right: 8px !important }',\r\n  ],\r\n})\r\nexport class MatFileUploadComponent {\r\n  @Input() labelText = 'Select File(s)';\r\n  @Input() selectButtonText = 'Select File(s)';\r\n  @Input() selectFilesButtonType: 'button' | 'menu' | 'reset' | 'submit' = 'button';\r\n  @Input() uploadButtonText = 'Upload File(s)';\r\n  @Input() uploadButtonType: 'button' | 'menu' | 'reset' | 'submit' = 'button';\r\n  @Input() allowMultipleFiles = false;\r\n  @Input() showUploadButton = true;\r\n  @Input() acceptedTypes = '*.*';\r\n  @Input() customSvgIcon?: string = null;\r\n  @Output() uploadClicked: EventEmitter<FileList> = new EventEmitter<FileList>();\r\n  @Output() selectedFilesChanged: EventEmitter<FileList> = new EventEmitter<FileList>();\r\n\r\n  @ViewChild('fileInput', { static: false }) fileInputRef: ElementRef\r\n  selectedFiles: FileList;\r\n  selectedFileText = '';\r\n\r\n  filesChanged(files?: FileList): void {\r\n    this.selectedFiles = files\r\n    this.selectedFilesChanged.emit(this.selectedFiles)\r\n    if (this.selectedFiles) {\r\n      const numSelectedFiles = this.selectedFiles.length\r\n      this.selectedFileText =\r\n        numSelectedFiles === 1\r\n          ? this.selectedFiles[0].name\r\n          : `${numSelectedFiles} files selected`\r\n    } else {\r\n      this.selectedFileText = ''\r\n      this.resetFileInput()\r\n    }\r\n  }\r\n\r\n  uploadFiles(): void {\r\n    this.uploadClicked.emit(this.selectedFiles)\r\n    this.resetFileInput()\r\n  }\r\n\r\n  resetFileInput(): void {\r\n    this.fileInputRef.nativeElement.value = ''\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common'\r\nimport { NgModule } from '@angular/core'\r\nimport { FormsModule } from '@angular/forms'\r\nimport { MatButtonModule } from '@angular/material/button'\r\nimport { MatIconModule } from '@angular/material/icon'\r\nimport { MatInputModule } from '@angular/material/input'\r\nimport { MatSelectModule } from '@angular/material/select'\r\n\r\nimport { MatFileUploadComponent } from './mat-file-upload.component'\r\n\r\n@NgModule({\r\n  declarations: [MatFileUploadComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n  ],\r\n  exports: [MatFileUploadComponent],\r\n})\r\nexport class MatFileUploadModule {}\r\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;IAOE;KAAiB;;gBALlB,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;;+BAJD;CAEA;;;;;;ACFA;IASA;QAqDW,cAAS,GAAG,gBAAgB,CAAC;QAC7B,qBAAgB,GAAG,gBAAgB,CAAC;QACpC,0BAAqB,GAA2C,QAAQ,CAAC;QACzE,qBAAgB,GAAG,gBAAgB,CAAC;QACpC,qBAAgB,GAA2C,QAAQ,CAAC;QACpE,uBAAkB,GAAG,KAAK,CAAC;QAC3B,qBAAgB,GAAG,IAAI,CAAC;QACxB,kBAAa,GAAG,KAAK,CAAC;QACtB,kBAAa,GAAY,IAAI,CAAC;QAC7B,kBAAa,GAA2B,IAAI,YAAY,EAAY,CAAC;QACrE,yBAAoB,GAA2B,IAAI,YAAY,EAAY,CAAC;QAItF,qBAAgB,GAAG,EAAE,CAAC;KAyBvB;;;;;IAvBC,6CAAY;;;;IAAZ,UAAa,KAAgB;QAC3B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAA;QAC1B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;QAClD,IAAI,IAAI,CAAC,aAAa,EAAE;;gBAChB,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM;YAClD,IAAI,CAAC,gBAAgB;gBACnB,gBAAgB,KAAK,CAAC;sBAClB,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI;sBACvB,gBAAgB,oBAAiB,CAAA;SAC3C;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAA;YAC1B,IAAI,CAAC,cAAc,EAAE,CAAA;SACtB;KACF;;;;IAED,4CAAW;;;IAAX;QACE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;QAC3C,IAAI,CAAC,cAAc,EAAE,CAAA;KACtB;;;;IAED,+CAAc;;;IAAd;QACE,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAA;KAC3C;;gBA3FF,SAAS,SAAC;oBACT,QAAQ,EAAE,iBAAiB;oBAC3B,QAAQ,EAAE,o3CA4CT;6BAEC,qDAAqD;wBACrD,+EAA+E;iBAElF;;;4BAEE,KAAK;mCACL,KAAK;wCACL,KAAK;mCACL,KAAK;mCACL,KAAK;qCACL,KAAK;mCACL,KAAK;gCACL,KAAK;gCACL,KAAK;gCACL,MAAM;uCACN,MAAM;+BAEN,SAAS,SAAC,WAAW,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;;IA2B3C,6BAAC;CA5FD,IA4FC;;;IAvCC,2CAAsC;;IACtC,kDAA6C;;IAC7C,uDAAkF;;IAClF,kDAA6C;;IAC7C,kDAA6E;;IAC7E,oDAAoC;;IACpC,kDAAiC;;IACjC,+CAA+B;;IAC/B,+CAAuC;;IACvC,+CAA+E;;IAC/E,sDAAsF;;IAEtF,8CAAmE;;IACnE,+CAAwB;;IACxB,kDAAsB;;;;;;;AC5ExB;IAUA;KAYmC;;gBAZlC,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,sBAAsB,CAAC;oBACtC,OAAO,EAAE;wBACP,YAAY;wBACZ,eAAe;wBACf,aAAa;wBACb,cAAc;wBACd,eAAe;wBACf,WAAW;qBACZ;oBACD,OAAO,EAAE,CAAC,sBAAsB,CAAC;iBAClC;;IACiC,0BAAC;CAZnC;;;;;;;;;;;;;;"}